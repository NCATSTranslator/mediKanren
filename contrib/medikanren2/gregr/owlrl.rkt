#lang racket/base
(provide (all-defined-out))
;; TODO: This implementation won't work until we define =/=
;(require "basic-naive.rkt")

;; Based on a description logic reasoner sketch by Jim Balhoff

(define RDF_TYPE "<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>")
(define RDF_FIRST "<http://www.w3.org/1999/02/22-rdf-syntax-ns#first>")
(define RDF_REST "<http://www.w3.org/1999/02/22-rdf-syntax-ns#rest>")
(define RDF_NIL "<http://www.w3.org/1999/02/22-rdf-syntax-ns#nil>")
(define RDFS_SUBCLASS_OF "<http://www.w3.org/2000/01/rdf-schema#subClassOf>")
(define RDFS_SUBPROPERTY_OF "<http://www.w3.org/2000/01/rdf-schema#subPropertyOf>")
(define RDFS_DOMAIN "<http://www.w3.org/2000/01/rdf-schema#domain>")
(define RDFS_RANGE "<http://www.w3.org/2000/01/rdf-schema#range>")
(define OWL_ANNOTATION_PROPERTY "<http://www.w3.org/2002/07/owl#AnnotationProperty>")
(define OWL_CLASS "<http://www.w3.org/2002/07/owl#Class>")
(define OWL_OBJECT_PROPERTY "<http://www.w3.org/2002/07/owl#ObjectProperty>")
(define OWL_TRANSITIVE_PROPERTY "<http://www.w3.org/2002/07/owl#TransitiveProperty>")
(define OWL_FUNCTIONAL_PROPERTY "<http://www.w3.org/2002/07/owl#FunctionalProperty>")
(define OWL_INVERSE_FUNCTIONAL_PROPERTY "<http://www.w3.org/2002/07/owl#InverseFunctionalProperty>")
(define OWL_IRREFLEXIVE_PROPERTY "<http://www.w3.org/2002/07/owl#IrreflexiveProperty>")
(define OWL_SYMMETRIC_PROPERTY "<http://www.w3.org/2002/07/owl#SymmetricProperty>")
(define OWL_ASYMMETRIC_PROPERTY "<http://www.w3.org/2002/07/owl#AsymmetricProperty>")
(define OWL_INVERSE_OF "<http://www.w3.org/2002/07/owl#inverseOf>")
(define OWL_EQUIVALENT_PROPERTY "<http://www.w3.org/2002/07/owl#equivalentProperty>")
(define OWL_PROPERTY_DISJOINT_WITH "<http://www.w3.org/2002/07/owl#propertyDisjointWith>")
(define OWL_ALL_DISJOINT_PROPERTIES "<http://www.w3.org/2002/07/owl#AllDisjointProperties>")
(define OWL_NAMED_INDIVIDUAL "<http://www.w3.org/2002/07/owl#NamedIndividual>")
(define OWL_PROPERTY_CHAIN_AXIOM "<http://www.w3.org/2002/07/owl#propertyChainAxiom>")
(define OWL_ON_PROPERTY "<http://www.w3.org/2002/07/owl#onProperty>")
(define OWL_SOME_VALUES_FROM "<http://www.w3.org/2002/07/owl#someValuesFrom>")
(define OWL_ALL_VALUES_FROM "<http://www.w3.org/2002/07/owl#allValuesFrom>")
(define OWL_EQUIVALENT_CLASS "<http://www.w3.org/2002/07/owl#equivalentClass>")
(define OWL_SAME_AS "<http://www.w3.org/2002/07/owl#sameAs>")
(define OWL_INTERSECTION_OF "<http://www.w3.org/2002/07/owl#intersectionOf>")
(define OWL_UNION_OF "<http://www.w3.org/2002/07/owl#unionOf>")
(define OWL_COMPLEMENT_OF "<http://www.w3.org/2002/07/owl#complementOf>")
(define OWL_RESTRICTION "<http://www.w3.org/2002/07/owl#Restriction>")
(define OWL_MEMBERS "<http://www.w3.org/2002/07/owl#members>")
(define OWL_DISJOINT_WITH "<http://www.w3.org/2002/07/owl#disjointWith>")
(define OWL_ALL_DISJOINT_CLASSES "<http://www.w3.org/2002/07/owl#AllDisjointClasses>")
(define OWL_HAS_SELF "<http://www.w3.org/2002/07/owl#hasSelf>")
(define OWL_THING "<http://www.w3.org/2002/07/owl#Thing>")
(define OWL_NOTHING "<http://www.w3.org/2002/07/owl#Nothing>")
(define OWL_SOURCE_INDIVIDUAL "<http://www.w3.org/2002/07/owl#sourceIndividual>")
(define OWL_ASSERTION_PROPERTY "<http://www.w3.org/2002/07/owl#assertionProperty>")
(define OWL_TARGET_INDIVIDUAL "<http://www.w3.org/2002/07/owl#targetIndividual>")
(define OWL_TARGET_VALUE "<http://www.w3.org/2002/07/owl#targetValue>")
(define OWL_HAS_VALUE "<http://www.w3.org/2002/07/owl#hasValue>")
(define OWL_MAX_CARDINALITY "<http://www.w3.org/2002/07/owl#maxCardinality>")
(define OWL_ONE_OF "<http://www.w3.org/2002/07/owl#oneOf>")
(define XSD_TRUE "\"true\"^^<http://www.w3.org/2001/XMLSchema#boolean>")
(define XSD_ZERO "\"0\"^^<http://www.w3.org/2001/XMLSchema#nonNegativeInteger>")
(define XSD_ONE "\"1\"^^<http://www.w3.org/2001/XMLSchema#nonNegativeInteger>")
(define SESAME_DIRECT_TYPE "<http://www.openrdf.org/schema/sesame#directType>")

(define-relation (list-contains node.list item)
  (conde ((rdf node.list RDF_FIRST item))
         ((fresh (other)
            (rdf node.list RDF_REST other)
            (list-contains other item)))))

(define-relation (chain s p o node.list)
  (conde ((fresh (X P1 Y)
            (rdf p OWL_PROPERTY_CHAIN_AXIOM X)
            (rdf X RDF_FIRST P1)
            (rdf s P1 o)
            (rdf X RDF_REST node.list)
            (=/= node.list RDF_NIL)))
         ((fresh (X P1 O1)
            (chain s p O1 X)
            (rdf X RDF_FIRST P1)
            (rdf O1 P1 o)
            (rdf X RDF_REST node.list)
            (=/= node.list RDF_NIL)))))

(define-relation (ichain individual class node.list)
  (conde ((fresh (X C1)
            (rdf class OWL_INTERSECTION_OF X)
            (rdf X RDF_FIRST C1)
            (rdf individual RDF_TYPE C1)
            (rdf X RDF_REST node.list)
            (=/= node.list RDF_NIL)))
         ((fresh (X C1)
            (ichain individual class X)
            (rdf X RDF_FIRST C1)
            (rdf individual RDF_TYPE C1)
            (rdf X RDF_REST node.list)
            (=/= node.list RDF_NIL)))))

(define-relation (rdf s p o)
  (conde ((fresh (p.other ?)
            (== p RDF_TYPE)
            (rdf p.other RDFS_DOMAIN o)
            (rdf s p.other ?)))
         ((fresh (p.other ?)
            (== p RDF_TYPE)
            (rdf p.other RDFS_RANGE o)
            (rdf ? p.other s)))
         ((fresh (p.other x)
            (== p OWL_SAME_AS)
            (rdf p.other RDF_TYPE OWL_FUNCTIONAL_PROPERTY)
            (rdf x p.other s)
            (rdf x p.other o)))
         ((fresh (p.other y)
            (== p OWL_SAME_AS)
            (rdf p.other RDF_TYPE OWL_INVERSE_FUNCTIONAL_PROPERTY)
            (rdf s p.other y)
            (rdf o p.other y)))
         ((fresh (p.other)
            (== p RDF_TYPE)
            (== o OWL_NOTHING)
            (rdf p.other RDF_TYPE OWL_IRREFLEXIVE_PROPERTY)
            (rdf s p.other s)))
         ((rdf p RDF_TYPE OWL_SYMMETRIC_PROPERTY)
          (rdf o p s))
         ((fresh (p.other y)
            (== p RDF_TYPE)
            (== o OWL_NOTHING)
            (rdf p.other RDF_TYPE OWL_ASYMMETRIC_PROPERTY)
            (rdf s p.other y)
            (rdf y p.other s)))
         ((fresh (y)
            (rdf p RDF_TYPE OWL_TRANSITIVE_PROPERTY)
            (rdf s p y)
            (rdf y p o)))
         ((fresh (p.other)
            (rdf p.other RDFS_SUBPROPERTY_OF p)
            (rdf s p.other o)))
         ((fresh (X P1 O1)
            (chain s p O1 X)
            (rdf X RDF_FIRST P1)
            (rdf O1 P1 o)
            (rdf X RDF_REST RDF_NIL)))
         ((fresh (P1)
            (rdf P1 OWL_EQUIVALENT_PROPERTY p)
            (rdf s P1 o)))
         ((fresh (P1)
            (rdf p OWL_EQUIVALENT_PROPERTY P1)
            (rdf s P1 o)))
         ((fresh (P1 P2 Y)
            (== p RDF_TYPE)
            (== o OWL_NOTHING)
            (rdf P1 OWL_PROPERTY_DISJOINT_WITH P2)
            (rdf s P1 Y)
            (rdf s P2 Y)))
         ((fresh (P1 P2 X)
            (== p RDF_TYPE)
            (== o OWL_NOTHING)
            (rdf P1 OWL_PROPERTY_DISJOINT_WITH P2)
            (rdf X P1 s)
            (rdf X P2 s)))
         ((fresh (V X Y P.i P.j)
            (== p RDF_TYPE)
            (== o OWL_NOTHING)
            (rdf X RDF_TYPE OWL_ALL_DISJOINT_PROPERTIES)
            (rdf X OWL_MEMBERS Y)
            (list-contains Y P.i)
            (list-contains Y P.j)
            (=/= P.i P.j)
            (rdf s P.i V)
            (rdf s P.j V)))
         ((fresh (U X Y P.i P.j)
            (== p RDF_TYPE)
            (== o OWL_NOTHING)
            (rdf X RDF_TYPE OWL_ALL_DISJOINT_PROPERTIES)
            (rdf X OWL_MEMBERS Y)
            (list-contains Y P.i)
            (list-contains Y P.j)
            (=/= P.i P.j)
            (rdf U P.i s)
            (rdf U P.j s)))
         ((fresh (P1)
            (rdf P1 OWL_INVERSE_OF p)
            (rdf o P1 s)))
         ((fresh (P1)
            (rdf p OWL_INVERSE_OF P1)
            (rdf o P1 s)))
         ((fresh (X P1 I2)
            (== p RDF_TYPE)
            (== o OWL_NOTHING)
            (rdf X OWL_SOURCE_INDIVIDUAL s)
            (rdf X OWL_ASSERTION_PROPERTY P1)
            (rdf X OWL_TARGET_INDIVIDUAL I2)
            (rdf s P1 I2)))
         ((fresh (X P1 I1)
            (== p RDF_TYPE)
            (== o OWL_NOTHING)
            (rdf X OWL_SOURCE_INDIVIDUAL I1)
            (rdf X OWL_ASSERTION_PROPERTY P1)
            (rdf X OWL_TARGET_INDIVIDUAL s)
            (rdf I1 P1 s)))
         ((fresh (X C1)
            (== p RDF_TYPE)
            (ichain s o X)
            (rdf X RDF_FIRST C1)
            (rdf s RDF_TYPE C1)
            (rdf X RDF_REST RDF_NIL)))
         ((fresh (C X)
            (== p RDF_TYPE)
            (rdf C OWL_INTERSECTION_OF X)
            (list-contains X o)
            (rdf s RDF_TYPE C)))
         ((fresh (X C1)
            (== p RDF_TYPE)
            (rdf o OWL_UNION_OF X)
            (list-contains X C1)
            (rdf s RDF_TYPE C1)))
         ((fresh (C1 C2)
            (== p RDF_TYPE)
            (== o OWL_NOTHING)
            (rdf C1 OWL_COMPLEMENT_OF C2)
            (rdf s RDF_TYPE C1)
            (rdf s RDF_TYPE C2)))
         ((fresh (Y P V)
            (== p RDF_TYPE)
            (rdf o OWL_SOME_VALUES_FROM Y)
            (rdf o OWL_ON_PROPERTY P)
            (rdf s P V)
            (rdf V RDF_TYPE Y)))
         ((fresh (P ?)
            (== p RDF_TYPE)
            (rdf o OWL_SOME_VALUES_FROM OWL_THING)
            (rdf o OWL_ON_PROPERTY P)
            (rdf s P ?)))
         ((fresh (X P U)
            (== p RDF_TYPE)
            (rdf X OWL_THING o)
            (rdf X OWL_ON_PROPERTY P)
            (rdf U RDF_TYPE X)
            (rdf U P s)))
         ((fresh (X)
            (rdf X OWL_HAS_VALUE o)
            (rdf X OWL_ON_PROPERTY p)
            (rdf s RDF_TYPE X)))
         ((fresh (P Y)
            (== P RDF_TYPE)
            (rdf o OWL_HAS_VALUE Y)
            (rdf o OWL_ON_PROPERTY P)
            (rdf s P Y)))
         ((fresh (X P ?)
            (== p RDF_TYPE)
            (== o OWL_NOTHING)
            (rdf X OWL_MAX_CARDINALITY XSD_ZERO)
            (rdf X OWL_ON_PROPERTY P)
            (rdf s RDF_TYPE X)
            (rdf s P ?)))
         ((fresh (X P U)
            (== p OWL_SAME_AS)
            (rdf X OWL_MAX_CARDINALITY XSD_ONE)
            (rdf X OWL_ON_PROPERTY P)
            (rdf U RDF_TYPE X)
            (rdf U P s)
            (rdf U P o)))
         ((fresh (X)
            (== p RDF_TYPE)
            (rdf o OWL_ONE_OF X)
            (list-contains X s)))
         ((fresh (C1)
            (== p RDF_TYPE)
            (rdf C1 RDFS_SUBCLASS_OF o)
            (rdf s RDF_TYPE C1)))
         ((fresh (C1)
            (== p RDF_TYPE)
            (rdf C1 OWL_EQUIVALENT_CLASS o)
            (rdf s RDF_TYPE C1)))
         ((fresh (C2)
            (== p RDF_TYPE)
            (rdf o OWL_EQUIVALENT_CLASS C2)
            (rdf s RDF_TYPE C2)))
         ((fresh (C1 C2)
            (== p RDF_TYPE)
            (== o OWL_NOTHING)
            (rdf C1 OWL_DISJOINT_WITH C2)
            (rdf s RDF_TYPE C1)
            (rdf s RDF_TYPE C2)))
         ((fresh (X Y C.i C.j)
            (== p RDF_TYPE)
            (== o OWL_NOTHING)
            (rdf X RDF_TYPE OWL_ALL_DISJOINT_CLASSES)
            (rdf X OWL_MEMBERS Y)
            (list-contains Y C.i)
            (list-contains Y C.j)
            (=/= C.i C.j)
            (rdf s RDF_TYPE C.i)
            (rdf s RDF_TYPE C.j)))))
